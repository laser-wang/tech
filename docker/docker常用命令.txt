groupadd docker
useradd -c "Docker User" -g docker -d /home/docker -s /bin/bash docker
passwd docker

curl -sSL http://acs-public-mirror.oss-cn-hangzhou.aliyuncs.com/docker-engine/internet | sh -
或者
$ curl -fsSL get.docker.com -o get-docker.sh #下载get-docker.sh文件
$ sudo sh get-docker.sh --mirror Aliyun #以阿里云镜像安装get-docker.sh脚本内容
$ sudo systemctl enable docker #开机启动docker
$ sudo systemctl start docker #启动docker
$ sudo groupadd docker #建立docker组
$ sudo usermod -aG docker $USER #将当前用户加入 docker 组
$ sudo vim /etc/systemd/system/multi-user.target.wants/docker.service #添加下面仓库地址到此文件
ExecStart=/usr/bin/dockerd --registry-mirror=https://vvvdxjt6.mirror.aliyuncs.com #使用阿里云加速
$ sudo systemctl daemon-reload #重新加载daemon
$ sudo systemctl restart docker  #重启docker
验证
sudo docker run --name webserver -d -p 81:80 nginx
curl localhost:81



tee -a /etc/sysctl.conf <<-EOF
>net.bridge.bridge-nf-call-ip6tables=1
>net.bridge.bridge-nf-call-iptables=1
>EOF
sysctl -p

tee /etc/yum.repos.d/docker.repo <<-'EOF'
[dockerrepo]
name=Docker Repository
baseurl=https://yum.dockerproject.org/repo/main/centos/7
enabled=1
gpgcheck=1
gpgkey=https://yum.dockerproject.org/gpg
EOF

yum update
yum install docker-engine
systemctl enable docker
systemctl start docker
systemctl list-unit-files | grep docker
vi /etc/systemd/system/multi-user.target.wants/docker.service
>ExecStart=/usr/bin/dockerd --registry-mirror=https://vvvdxjt6.mirror.aliyuncs.com
systemctl daemon-reload
systemctl restart docker
ps -ef | grep dockerd

vi /etc/systemd/system/multi-user.target.wants/docker.service



docker pull haproxy:1.7
docker images
docker logs my-running-haproxy
docker ps -a
docker rm my-running-haproxy
docker rmi 3ef
docker build -t my-haproxy .
docker stop my-running-haproxy
docker logs -f registrator
docker port caton_user_system
docker inspect registrator
docker save -o centos7.tar centos
docker load --input ./haproxy.tar
docker run --name webserver -d -p 81:80 nginx
docker run --privileged -tid --name centostest centos /usr/sbin/init   #支持systemctl
docker run --privileged -tid --name centos_redis_mysql_ins -v /home/docker/tools:/opt/tools centos_redis_mysql_ins:v1 /usr/sbin/init 
docker rm $(docker ps -a -q) #清理所有容器
docker save centos_redis | gzip  > centos_redis_mysql_image.tar.gz #导出镜像到文件
docker load -i centos_redis.tar.gz #导入文件到镜像
docker export 915 | gzip  > centos_redis_mysql_instance.tar.gz #导出容器到文件

#安装nsenter
yum -y install util-linux
echo PID=$(docker inspect --format "{{ .State.Pid }}" b18)
sudo nsenter --target 18306 --mount --uts --ipc --net --pid
exit



#haproxy自动例子
docker build -t my-haproxy .
docker run -it --rm --name haproxy-syntax-check my-haproxy haproxy -c -f /usr/local/etc/haproxy/haproxy.cfg
docker run -d --name my-running-haproxy my-haproxy
-p 80:80 -p 9000:9000

docker stop my-running-haproxy
docker rm my-running-haproxy
docker rmi my-haproxy
docker images
docker ps -a


docker run -d --name my-running-haproxy -p 80:80 -v /opt/docker/haproxy:/usr/local/etc/haproxy haproxy:1.7
docker logs my-running-haproxy


#如果关闭centos7防火墙后，dock会报错:
docker: Error response from daemon: driver failed programming external connectivity on endpoint caton_user_system (91ebbe39d857141662e62b5ee3baee29d3b5821d169dcf62c0b8294666a99a08):  (iptables failed: iptables --wait -t nat -A DOCKER -p tcp -d 0/0 --dport 32820 -j DNAT --to-destination 172.17.0.3:9000 ! -i docker0: iptables: No chain/target/match by that name.
解决办法：
增加iptalbes 规则
iptables -L -n --line-numbers
iptables -t filter -N DOCKER


#下面是正常的规则sample
#======================================================================
Chain INPUT (policy ACCEPT)
num  target     prot opt source               destination         

Chain FORWARD (policy DROP)
num  target     prot opt source               destination         
1    DOCKER-ISOLATION  all  --  0.0.0.0/0            0.0.0.0/0           
2    DOCKER     all  --  0.0.0.0/0            0.0.0.0/0           
3    ACCEPT     all  --  0.0.0.0/0            0.0.0.0/0            ctstate RELATED,ESTABLISHED
4    ACCEPT     all  --  0.0.0.0/0            0.0.0.0/0           
5    ACCEPT     all  --  0.0.0.0/0            0.0.0.0/0           

Chain OUTPUT (policy ACCEPT)
num  target     prot opt source               destination         

Chain DOCKER (1 references)
num  target     prot opt source               destination         

Chain DOCKER-ISOLATION (1 references)
num  target     prot opt source               destination         
1    RETURN     all  --  0.0.0.0/0            0.0.0.0/0   
#======================================================================


#监控
wget https://github.com/bcicen/ctop/releases/download/v0.5/ctop-0.5-linux-amd64 -O /usr/local/bin/ctop
chmod +x /usr/local/bin/ctop
docker pull wrfly/ctop
docker run -ti --name ctop --rm -v /var/run/docker.sock:/var/run/docker.sock wrfly/ctop:latest

Option	Description
-a	show active containers only
-f	set an initial filter string
-h	display help dialog
-i	invert default colors
-r	reverse container sort order
-s	select initial container sort field
-v	output version information and exit
Keybindings
Key	Action
a	Toggle display of all (running and non-running) containers
f	Filter displayed containers (esc to clear when open)
H	Toggle ctop header
h	Open help dialog
s	Select container sort field
r	Reverse container sort order
q	Quit ctop




WARNING: IPv4 forwarding is disabled. Networking will not work.
解决办法：
# vi /etc/sysctl.conf
或者
# vi /usr/lib/sysctl.d/00-system.conf
添加如下代码：
    net.ipv4.ip_forward=1
重启network服务
# systemctl restart network
查看是否修改成功
# sysctl net.ipv4.ip_forward








